{"version":3,"sources":["redux/types.js","redux/reducers/todoReducer.js","redux/reducers/uiReducer.js","redux/store.js","views/Login.js","helpers/fetch.js","redux/actions/todoActions.js","redux/actions/uiActions.js","components/Modal.js","hooks/useForm.js","containers/Layout.js","components/Task.js","views/Home.js","router/LoggedRouter.js","router/AppRouter.js","App.js","index.js"],"names":["types","initialState","tasks","activeTask","activeFilter","modalIsOpen","reducers","combineReducers","ui","state","action","type","payload","todo","map","task","_id","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","Login","api_url","simpleFetch","endpoint","method","body","fetch","JSON","stringify","headers","error","console","log","updateTask","dispatch","a","res","json","data","ok","setActiveTask","setActiveFilter","filterId","openModal","Modal","useDispatch","useSelector","useState","values","setValues","target","name","value","useForm","title","completed","taskInputValue","handleInputChange","handleCloseModal","className","onSubmit","e","preventDefault","onChange","autoComplete","onClick","Layout","children","verifyActiveFilterClassName","filterName","id","Task","deleteTask","Home","useEffect","renderTasksByFilter","LoggedRouter","exact","path","component","AppRouter","to","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.004e2e4b.chunk.js","sourcesContent":["export const types = {\r\n  uiSetActiveFilter: '[ui] Set active filter',\r\n  iuOpenModal: '[ui] Open modal',\r\n  iuCloseModal: '[ui] Close modal',\r\n\r\n  todoGetTasks: '[todo] Get tasks',\r\n  todoCreateTask: '[todo] Create task',\r\n  todoUpdateTask: '[todo] Update task',\r\n  todoDeleteTask: '[todo] Delete task',\r\n  todoSetActiveTask: '[todo] Set active task',\r\n};\r\n","import { types } from '../types';\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  activeTask: null,\r\n};\r\n\r\nexport const todoReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.todoGetTasks:\r\n      return {\r\n        ...state,\r\n        tasks: action.payload,\r\n      };\r\n\r\n    case types.todoCreateTask:\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, action.payload],\r\n      };\r\n\r\n    case types.todoUpdateTask:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map((task) =>\r\n          task._id === action.payload._id ? action.payload : task,\r\n        ),\r\n      };\r\n\r\n    case types.todoDeleteTask:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter((task) => task._id !== action.payload._id),\r\n      };\r\n\r\n    case types.todoSetActiveTask:\r\n      return {\r\n        ...state,\r\n        activeTask: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from '../types';\r\n\r\nconst initialState = {\r\n  activeFilter: 'all',\r\n  modalIsOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiSetActiveFilter:\r\n      return {\r\n        ...state,\r\n        activeFilter: action.payload,\r\n      };\r\n    case types.iuOpenModal:\r\n      return {\r\n        ...state,\r\n        modalIsOpen: true,\r\n      };\r\n    case types.iuCloseModal:\r\n      return {\r\n        ...state,\r\n        modalIsOpen: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { todoReducer } from './reducers/todoReducer';\r\nimport { uiReducer } from './reducers/uiReducer';\r\n\r\nconst reducers = combineReducers({\r\n  ui: uiReducer,\r\n  todo: todoReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk)),\r\n);\r\n","export const Login = () => {\r\n  return <h1>Login</h1>;\r\n};\r\n","const api_url = 'https://todo-mern-app-avilio.herokuapp.com';\r\n\r\nexport const simpleFetch = (endpoint, method = 'GET', body = null) => {\r\n  try {\r\n    if (method === 'GET') {\r\n      return fetch(`${api_url}/api${endpoint}`);\r\n    } else {\r\n      return fetch(`${api_url}/api${endpoint}`, {\r\n        method,\r\n        body: JSON.stringify({ task: body }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log('Error happened here!');\r\n    console.error(error);\r\n  }\r\n};\r\n","import { types } from '../types';\r\nimport { simpleFetch } from '../../helpers/fetch';\r\n\r\nexport const getTasks = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await simpleFetch('/tasks');\r\n      const data = await res.json();\r\n\r\n      if (data.ok) {\r\n        dispatch({\r\n          type: types.todoGetTasks,\r\n          payload: data.tasks,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const createTask = (task) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await simpleFetch('/tasks', 'POST', task);\r\n      const data = await res.json();\r\n\r\n      if (data.ok) {\r\n        dispatch({\r\n          type: types.todoCreateTask,\r\n          payload: data.task,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log('asdasd');\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateTask = (task) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await simpleFetch(`/tasks/${task._id}`, 'PUT', task);\r\n      const data = await res.json();\r\n\r\n      if (data.ok) {\r\n        dispatch({\r\n          type: types.todoUpdateTask,\r\n          payload: data.task,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteTask = (task) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await simpleFetch(`/tasks/${task._id}`, 'DELETE', task);\r\n      const data = await res.json();\r\n\r\n      if (data.ok) {\r\n        dispatch({\r\n          type: types.todoDeleteTask,\r\n          payload: data.task,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const setActiveTask = (task) => {\r\n  return {\r\n    type: types.todoSetActiveTask,\r\n    payload: task,\r\n  };\r\n};\r\n","import { types } from '../types';\r\n\r\nexport const setActiveFilter = (filterId) => {\r\n  return {\r\n    type: types.uiSetActiveFilter,\r\n    payload: filterId,\r\n  };\r\n};\r\n\r\nexport const openModal = () => {\r\n  return {\r\n    type: types.iuOpenModal,\r\n  };\r\n};\r\n\r\nexport const closeModal = () => {\r\n  return {\r\n    type: types.iuCloseModal,\r\n  };\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from '../hooks/useForm';\r\nimport {\r\n  createTask,\r\n  setActiveTask,\r\n  updateTask,\r\n} from '../redux/actions/todoActions';\r\nimport { closeModal } from '../redux/actions/uiActions';\r\n\r\nexport const Modal = () => {\r\n  const dispatch = useDispatch();\r\n  const { activeTask } = useSelector((state) => state.todo);\r\n\r\n  const newTask = () => {\r\n    if (activeTask) {\r\n      return { ...activeTask };\r\n    } else {\r\n      return { title: '', completed: false };\r\n    }\r\n  };\r\n\r\n  const [taskInputValue, handleInputChange] = useForm(newTask());\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (activeTask) {\r\n      dispatch(updateTask(taskInputValue));\r\n    } else {\r\n      dispatch(createTask(taskInputValue));\r\n    }\r\n    handleCloseModal();\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    dispatch(setActiveTask(null));\r\n    dispatch(closeModal());\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <form onSubmit={handleSubmit} className=\"modal-content-form\">\r\n          <h3>{activeTask ? 'Editar tarea' : 'Nueva tarea'}</h3>\r\n          <input\r\n            value={taskInputValue.title}\r\n            onChange={handleInputChange}\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <div className=\"form-options\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCloseModal}\r\n              className=\"form-options-cancel\"\r\n            >\r\n              Cancelar\r\n            </button>\r\n            <button type=\"submit\" className=\"form-options-save\">\r\n              {activeTask ? 'Editar' : 'Guardar'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal } from '../components/Modal';\r\nimport { openModal, setActiveFilter } from '../redux/actions/uiActions';\r\n\r\nexport const Layout = ({ children }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { activeFilter, modalIsOpen } = useSelector((state) => state.ui);\r\n\r\n  const verifyActiveFilterClassName = (filterName) => {\r\n    if (filterName === activeFilter) {\r\n      return 'layout-header-nav-button active';\r\n    } else {\r\n      return 'layout-header-nav-button';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"layout\">\r\n      <header className=\"layout-header\">\r\n        <div className=\"layout-header-top\">\r\n          <h1>Tareas</h1>\r\n          {/* <div className=\"layout-header-top-user\">\r\n            <i className=\"material-icons\">perm_identity</i>\r\n          </div> */}\r\n        </div>\r\n        <nav className=\"layout-header-nav\">\r\n          <button\r\n            onClick={(e) => dispatch(setActiveFilter(e.target.id))}\r\n            id=\"all\"\r\n            className={verifyActiveFilterClassName('all')}\r\n          >\r\n            Todas\r\n          </button>\r\n          <button\r\n            onClick={(e) => dispatch(setActiveFilter(e.target.id))}\r\n            id=\"pending\"\r\n            className={verifyActiveFilterClassName('pending')}\r\n          >\r\n            Pendientes\r\n          </button>\r\n          <button\r\n            onClick={(e) => dispatch(setActiveFilter(e.target.id))}\r\n            id=\"done\"\r\n            className={verifyActiveFilterClassName('done')}\r\n          >\r\n            Completadas\r\n          </button>\r\n        </nav>\r\n      </header>\r\n      <main className=\"layout-main\">\r\n        {children}\r\n        <button\r\n          onClick={() => dispatch(openModal())}\r\n          className=\"add-task-button\"\r\n        >\r\n          +\r\n        </button>\r\n      </main>\r\n      <footer className=\"layout-footer\"></footer>\r\n      {modalIsOpen && <Modal />}\r\n    </div>\r\n  );\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport {\r\n  deleteTask,\r\n  setActiveTask,\r\n  updateTask,\r\n} from '../redux/actions/todoActions';\r\nimport { openModal } from '../redux/actions/uiActions';\r\n\r\nexport const Task = ({ task }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOpenModal = () => {\r\n    dispatch(setActiveTask(task));\r\n    dispatch(openModal());\r\n  };\r\n\r\n  return (\r\n    <div className=\"task\">\r\n      <section\r\n        className={\r\n          task.completed ? 'task-content task-completed' : 'task-content'\r\n        }\r\n      >\r\n        {task.title}\r\n      </section>\r\n      <section className=\"task-options\">\r\n        <button\r\n          onClick={() => dispatch(deleteTask(task))}\r\n          className=\"task-options-delete material-icons\"\r\n        >\r\n          close\r\n        </button>\r\n        <button\r\n          onClick={handleOpenModal}\r\n          className=\"task-options-update material-icons\"\r\n        >\r\n          edit\r\n        </button>\r\n        <button\r\n          onClick={() =>\r\n            dispatch(\r\n              updateTask({\r\n                ...task,\r\n                completed: !task.completed,\r\n              }),\r\n            )\r\n          }\r\n          className=\"task-options-completed material-icons\"\r\n        >\r\n          done\r\n        </button>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Task } from '../components/Task';\r\nimport { getTasks } from '../redux/actions/todoActions';\r\n\r\nexport const Home = () => {\r\n  const { tasks } = useSelector((state) => state.todo);\r\n  const { activeFilter } = useSelector((state) => state.ui);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getTasks());\r\n  }, [dispatch]);\r\n\r\n  const renderTasksByFilter = () => {\r\n    switch (activeFilter) {\r\n      case 'all':\r\n        return tasks;\r\n      case 'pending':\r\n        return tasks.filter((task) => !task.completed);\r\n      case 'done':\r\n        return tasks.filter((task) => task.completed);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {renderTasksByFilter().map((task) => {\r\n        return <Task key={task._id} task={task} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import { Switch, Route} from 'react-router-dom';\r\nimport { Layout } from '../containers/Layout';\r\n\r\nimport { Home } from '../views/Home';\r\n\r\nexport const LoggedRouter = () => {\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n};\r\n","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport { Login } from '../views/Login';\r\nimport { LoggedRouter } from './LoggedRouter';\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/\" component={LoggedRouter} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","import { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport './styles/index.scss';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}